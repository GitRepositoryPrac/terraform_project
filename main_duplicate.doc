provider "aws" {
     access_key = "AKIAWI7DNA7TUXZGNDIV"
    secret_key = "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"
    #region = "us-west-1"
    region = var.region

}

#we need to create a VPC resource
## Variable code is there here so delete that perticular code then we can write the code seperatly.
## the file name called "variable.tf"
resource "aws_vpc" "ntiervpc2" {
    cidr_block = var.vpccidr  #"192.168.0.0/16"
    enable_dns_support = true
    enable_dns_hostnames = true
             
             tags = {
                 "Name" = "From tf" 
             }
}
#lets create a subnet web1 
# how to declare multile subnets in loo 
#let's create all subnets
resource "aws_subnet" "subnets" { #here we has declare "subnets" this one is callin at "tags" file
    count = 6 # here we create 6 subnets that's why we can declare the variable in 6(count 6)
    vpc_id = aws_vpc.ntiervpc2.id # not chages 

# cidr_block = var.cidrranges[count.index]     #cidrranges this varible declared in variable.tf file
    cidr_block = cidrsubnet(var.vpccidr,8,count.index)
    #availability_zone = var.subnetazs[count.index]
   #instared of above code by using extensonal operator
    availability_zone = "${var.region}${count.index % 2 == 0 ? "a" : "c"}"
      tags = {
          #"Name" = var.subnets[count.index]   
          #Observe here we can call to "local.tf" file directly
          "Name" = local.subnets[count.index]
      }
    depends_on =[
        aws_vpc.ntiervpc2
    ]
}
#modify the below code and the different subnets we can declre the only one subnet code
# this code related variable data 
#we can declared in variable.tf file

##resource "aws_subnet" "web1" {
  ##  vpc_id = aws_vpc.ntiervpc2.id
    ##cidr_block = "192.168.0.0/24"
    ##availability_zone = "us-west-1a"
    ##tags = {
      ##  "Name" = "web1"
    ##}
  ##}

  #lets create a subnet  web2
#resource "aws_subnet" "web2" {
    #resource_type.resource_name.attribute_ID.
 #   vpc_id = aws_vpc.ntiervpc2.id
  #  cidr_block = "192.168.1.0/24"
   # availability_zone = "us-west-1c"
    #tags = {
     #   "Name" = "web2_tf2"
    #}
  #}


#Here creating the "Internet Gate way of the application"
resource "aws_internet_gateway" "ntiergw" {
  vpc_id = aws_vpc.ntiervpc2.id
  
  tags = {
    "Name" = local.igw_name
  }

  
}

#Create a route table
resource "aws_route_table" "publicrt" {
   vpc_id = aws_vpc.ntiervpc2.id

  route  {
    #count = 6
    cidr_block = local.anywhere  #subnet[count.insex]
    gateway_id = aws_internet_gateway.ntiergw.id
    #depends_on = [ 
   #aws_route_table.publicrt
   #]
  }

#Depends related 
  depends_on = [ 
    aws_vpc.ntiervpc2,
    aws_subnet.subnets[0],
    aws_subnet.subnets[1]
    

   ]
   tags = {
    "Name" = "publicrt"
  }  
}


#resource "aws_route_table_association" "web1association" {
 # route_table_id = aws_route_table.publicrt.id
  #subnet_id = aws_subnet.subnets[0].id
  
  #depends_on = [ 
   # aws_route_table.publicrt
   #]
  
#}


#resource "aws_route_table_association" "web2association" {
 # route_table_id = aws_route_table.publicrt.id
  #subnet_id = aws_subnet.subnets[1].id
  
  #depends_on = [ 
   # aws_route_table.publicrt
   #]
  
#}

# we can associate the web related
resource "aws_route_table_association" "webassociation" {
  count = 2
  route_table_id = aws_route_table.publicrt.id
  subnet_id = aws_subnet.subnets[count.index].id
  
  depends_on = [ 
    aws_route_table.publicrt
   ]
  
}
  #depends_on = [
   #aws_vpc.ntier2,
   #aws_subnet.subnets[2],
   #aws_subnet.subnets[3],
   #aws_subnet.subnets[4],
   #aws_subnet.subnets[5]
   # ]

#We can create the private subnet associate with app1,app2 , db1 and db2
#resource "aws_route_table "privatert" {
 #count = 4
 #vpc_id = aws_vpc.ntiervpc2.id
 #subnet_id = aws_subnet.subnets[2].id
  #subnet_id = aws_subnet.subnets[count.index]

   #depends_on = [
    # aws_route_table.privatert
   #]

#}

resource "aws_route_table" "privatert" {
  vpc_id = aws_vpc.ntiervpc2.id
  #Depends related 
  depends_on = [ 
    aws_vpc.ntiervpc2,
    aws_subnet.subnets[2],
    aws_subnet.subnets[3],
    aws_subnet.subnets[4],
    aws_subnet.subnets[5]
   ]
  tags = {
    "Name" = "privatert"
  }

}
 #We can create the private subnet associate with app1,app2 , db1 and db2
#now i need to create association
#resource "aws_route_table_asssociations" "app1association" {
resource "aws_route_table_association" "appassociations" {  # here main theme is we are not write any
   count = 4
   #route_table_id = aws_route_table.privatert.id
    route_table_id = aws_route_table.privatert.id
   #subnet_id = aws_subnet.subnets[2].id # here we can write the increse the everytime one , so we need to instated of this command below command.
   #subnet_id = aws_subnet.subnets[count.index].id
   subnet_id = aws_subnet.subnets[count.index].id
  depends_on = [
     aws_route_table.privatert
   ]
  
 
}

